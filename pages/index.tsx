import { useState } from 'react';
import { useSession } from 'next-auth/react';
import { MongoClient } from 'mongodb';

import Head from 'next/head';
import Header from '@/components/Header';
import NewNumberForm from '@/components/Numbers/NewNumberForm';

const Home: React.FC<{ currentNumber: number }> = (props) => {
  const { data: session } = useSession();
  const [currentNumber, setCurrentNumber] = useState(props.currentNumber);

  const addNumberHandler = async (enteredNumberData: {}) => {
    const response = await fetch('/api/new-number', {
      method: 'POST',
      body: JSON.stringify(enteredNumberData),
      headers: {
        'Content-Type': 'application/json',
      },
    });

    const data = await response.json();
    setCurrentNumber(currentNumber + 1);

    console.log(data);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main>
        <NewNumberForm
          currentNumber={currentNumber}
          onAddNumber={addNumberHandler}
        />
        <p>{props.currentNumber}</p>
        <p>{JSON.stringify(session)}</p>
      </main>
    </>
  );
};

export async function getStaticProps() {
  const client = await MongoClient.connect(process.env.MONGODB_URI as string);

  const db = client.db('StockNumbers');
  const numbersCollection = db.collection('numbers');

  const data = await numbersCollection
    .find()
    .sort({ 'data.stock_number': -1 })
    .limit(1)
    .toArray();

  client.close();

  const currentNumber = data[0].data.stock_number;

  return {
    props: {
      currentNumber: currentNumber,
    },
    revalidate: 10,
  };
}

export default Home;
